[comment encoding = UTF-8 /]
[comment]
 As we handle UML models, we register UML metamodel.
 Be careful while changing .mtl name, module name MUST
 have the same name as its file.
[/comment]
[module my-m2t('http://www.eclipse.org/uml2/4.0.0/UML')]

[comment]
 Main entry.
 * Do NOT change its name, it must be "generate".
 * You can change input UML type to the one
   you want (e.g, "m : Model" or "c : Class" ...).
 * "[file ../]" block can be transfered in other
   templates. Main entry does NOT have to contain
   this block, it can be put in other ones.
[/comment]
[template public generate(m : Model)]
[comment @main/]
[m.packagedElement.gen()/]

[/template]

[template public gen(p : PackageableElement) /]
[template public gen(p : Package) ? (not p.packagedElement->isEmpty())]
[p.packagedElement->select(not oclIsKindOf(Package)).gen()/]
[p.packagedElement->select(oclIsKindOf(Package)).gen()/]
[/template]

[template public gen(c : Class)]
[file (m.name.concat('.json'), false, 'UTF-8')]
## ['['/]CLASS] [c.name/]


{
    "relationships": [
        {
            "relationshipId": 1,
            "relationshipName": "user",
            "relationshipNameCapitalized": "User",
            "relationshipFieldName": "user",
            "otherEntityName": "user",
            "relationshipType": "one-to-one",
            "otherEntityNameCapitalized": "User",
            "ownerSide": true
        }
    ],
    "fields": [
        {
            "fieldId": 1,
            "fieldName": "name",
            "fieldType": "String",
            "fieldNameCapitalized": "Name",
            "fieldNameUnderscored": "name"
        },
        {
            "fieldId": 2,
            "fieldName": "birthday",
            "fieldType": "LocalDate",
            "fieldNameCapitalized": "Birthday",
            "fieldNameUnderscored": "birthday"
        },
        {
            "fieldId": 3,
            "fieldName": "firstname",
            "fieldType": "String",
            "fieldNameCapitalized": "Firstname",
            "fieldNameUnderscored": "firstname"
        }
    ],
    [for (p : Property | c.attribute)]
    [p.genProp()/]
    [/for]
    
    "fieldsContainOwnerManyToMany": false,
    "fieldsContainOneToMany": false,
    "fieldsContainLocalDate": true,
    "fieldsContainCustomTime": true,
    "fieldsContainBigDecimal": false,
    "fieldsContainDateTime": false,
    "fieldsContainDate": false,
    "changelogDate": "20150303155053",
    "pagination": "pagination"
}




[/file]
[/template]

[template public genProp(p : Property)]
* ['['/]Property] __[p.name/]__: *[if (p.type <> null)][p.type.qualifiedName/][else]Undefined[/if]*
[/template]
